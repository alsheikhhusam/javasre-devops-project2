apiVersion: apps/v1
kind: Deployment
metadata:
  name: query-api
  labels:
    app: query-system-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: query-system-api
  template:
    metadata:
      labels:
        app: query-system-api
    spec:
      containers:
        - image: husamalsheikh/queryapi:latest
          imagePullPolicy: Always
          name: query-system-api
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /k8s/demo
              port: 8080
          readinessProbe:
            httpGet:
              path: /k8s/demo
              port: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: query-service
spec:
  selector:
    app: query-system-api
  type: NodePort
  ports:
    - port: 8081
      targetPort: 8081

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: twilio-api
  labels:
    app: twilio-system-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: twilio-system-api
  template:
    metadata:
      labels:
        app: twilio-system-api
    spec:
      containers:
        - image: husamalsheikh/twilioapi:latest
          imagePullPolicy: Always
          name: twilio-system-api
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /k8s/demo
              port: 8080
          readinessProbe:
            httpGet:
              path: /k8s/demo
              port: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: twilio-service
spec:
  selector:
    app: twilio-system-api
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-api
  labels:
    app: weather-system-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: weather-system-api
  template:
    metadata:
      labels:
        app: weather-system-api
    spec:
      containers:
        - image: husamalsheikh/weatherapi:latest
          imagePullPolicy: Always
          name: weather-system-api
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /k8s/demo
              port: 8080
          readinessProbe:
            httpGet:
              path: /k8s/demo
              port: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: weather-service
spec:
  selector:
    app: weather-system-api
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: weather-ingress
spec:
  defaultBackend:
    service:
      name: weather-service
      port:
        number: 8080